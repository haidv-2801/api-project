#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace BlogApi
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="Blog")]
	public partial class BlogDbContextDataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Extensibility Method Definitions
    partial void OnCreated();
    partial void Insertauthor(author instance);
    partial void Updateauthor(author instance);
    partial void Deleteauthor(author instance);
    partial void Insertpost(post instance);
    partial void Updatepost(post instance);
    partial void Deletepost(post instance);
    #endregion
		
		public BlogDbContextDataContext() : 
				base(global::System.Configuration.ConfigurationManager.ConnectionStrings["BlogConnectionString"].ConnectionString, mappingSource)
		{
			OnCreated();
		}
		
		public BlogDbContextDataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public BlogDbContextDataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public BlogDbContextDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public BlogDbContextDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<author> authors
		{
			get
			{
				return this.GetTable<author>();
			}
		}
		
		public System.Data.Linq.Table<post> posts
		{
			get
			{
				return this.GetTable<post>();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.authors")]
	public partial class author : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _ID;
		
		private string _Name;
		
		private string _Avatar;
		
		private string _Description;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(long value);
    partial void OnIDChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnAvatarChanging(string value);
    partial void OnAvatarChanged();
    partial void OnDescriptionChanging(string value);
    partial void OnDescriptionChanged();
    #endregion
		
		public author()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="BigInt NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public long ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NVarChar(50)")]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Avatar", DbType="Text", UpdateCheck=UpdateCheck.Never)]
		public string Avatar
		{
			get
			{
				return this._Avatar;
			}
			set
			{
				if ((this._Avatar != value))
				{
					this.OnAvatarChanging(value);
					this.SendPropertyChanging();
					this._Avatar = value;
					this.SendPropertyChanged("Avatar");
					this.OnAvatarChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Description", DbType="Text", UpdateCheck=UpdateCheck.Never)]
		public string Description
		{
			get
			{
				return this._Description;
			}
			set
			{
				if ((this._Description != value))
				{
					this.OnDescriptionChanging(value);
					this.SendPropertyChanging();
					this._Description = value;
					this.SendPropertyChanged("Description");
					this.OnDescriptionChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.posts")]
	public partial class post : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _ID;
		
		private System.Nullable<System.DateTime> _Post_Date;
		
		private string _Post_Content;
		
		private System.Nullable<bool> _Post_Status;
		
		private string _Post_Type;
		
		private System.Nullable<int> _Post_Like_Count;
		
		private System.Nullable<int> _Post_Comment_count;
		
		private System.Nullable<byte> _Post_Has_Article;
		
		private string _Article_Title;
		
		private string _Article_Content;
		
		private System.Nullable<long> _Author_ID;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(long value);
    partial void OnIDChanged();
    partial void OnPost_DateChanging(System.Nullable<System.DateTime> value);
    partial void OnPost_DateChanged();
    partial void OnPost_ContentChanging(string value);
    partial void OnPost_ContentChanged();
    partial void OnPost_StatusChanging(System.Nullable<bool> value);
    partial void OnPost_StatusChanged();
    partial void OnPost_TypeChanging(string value);
    partial void OnPost_TypeChanged();
    partial void OnPost_Like_CountChanging(System.Nullable<int> value);
    partial void OnPost_Like_CountChanged();
    partial void OnPost_Comment_countChanging(System.Nullable<int> value);
    partial void OnPost_Comment_countChanged();
    partial void OnPost_Has_ArticleChanging(System.Nullable<byte> value);
    partial void OnPost_Has_ArticleChanged();
    partial void OnArticle_TitleChanging(string value);
    partial void OnArticle_TitleChanged();
    partial void OnArticle_ContentChanging(string value);
    partial void OnArticle_ContentChanged();
    partial void OnAuthor_IDChanging(System.Nullable<long> value);
    partial void OnAuthor_IDChanged();
    #endregion
		
		public post()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="BigInt NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public long ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Post_Date", DbType="DateTime")]
		public System.Nullable<System.DateTime> Post_Date
		{
			get
			{
				return this._Post_Date;
			}
			set
			{
				if ((this._Post_Date != value))
				{
					this.OnPost_DateChanging(value);
					this.SendPropertyChanging();
					this._Post_Date = value;
					this.SendPropertyChanged("Post_Date");
					this.OnPost_DateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Post_Content", DbType="NVarChar(MAX)")]
		public string Post_Content
		{
			get
			{
				return this._Post_Content;
			}
			set
			{
				if ((this._Post_Content != value))
				{
					this.OnPost_ContentChanging(value);
					this.SendPropertyChanging();
					this._Post_Content = value;
					this.SendPropertyChanged("Post_Content");
					this.OnPost_ContentChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Post_Status", DbType="Bit")]
		public System.Nullable<bool> Post_Status
		{
			get
			{
				return this._Post_Status;
			}
			set
			{
				if ((this._Post_Status != value))
				{
					this.OnPost_StatusChanging(value);
					this.SendPropertyChanging();
					this._Post_Status = value;
					this.SendPropertyChanged("Post_Status");
					this.OnPost_StatusChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Post_Type", DbType="VarChar(50)")]
		public string Post_Type
		{
			get
			{
				return this._Post_Type;
			}
			set
			{
				if ((this._Post_Type != value))
				{
					this.OnPost_TypeChanging(value);
					this.SendPropertyChanging();
					this._Post_Type = value;
					this.SendPropertyChanged("Post_Type");
					this.OnPost_TypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Post_Like_Count", DbType="Int")]
		public System.Nullable<int> Post_Like_Count
		{
			get
			{
				return this._Post_Like_Count;
			}
			set
			{
				if ((this._Post_Like_Count != value))
				{
					this.OnPost_Like_CountChanging(value);
					this.SendPropertyChanging();
					this._Post_Like_Count = value;
					this.SendPropertyChanged("Post_Like_Count");
					this.OnPost_Like_CountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Post_Comment_count", DbType="Int")]
		public System.Nullable<int> Post_Comment_count
		{
			get
			{
				return this._Post_Comment_count;
			}
			set
			{
				if ((this._Post_Comment_count != value))
				{
					this.OnPost_Comment_countChanging(value);
					this.SendPropertyChanging();
					this._Post_Comment_count = value;
					this.SendPropertyChanged("Post_Comment_count");
					this.OnPost_Comment_countChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Post_Has_Article", DbType="TinyInt")]
		public System.Nullable<byte> Post_Has_Article
		{
			get
			{
				return this._Post_Has_Article;
			}
			set
			{
				if ((this._Post_Has_Article != value))
				{
					this.OnPost_Has_ArticleChanging(value);
					this.SendPropertyChanging();
					this._Post_Has_Article = value;
					this.SendPropertyChanged("Post_Has_Article");
					this.OnPost_Has_ArticleChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Article_Title", DbType="NVarChar(MAX)")]
		public string Article_Title
		{
			get
			{
				return this._Article_Title;
			}
			set
			{
				if ((this._Article_Title != value))
				{
					this.OnArticle_TitleChanging(value);
					this.SendPropertyChanging();
					this._Article_Title = value;
					this.SendPropertyChanged("Article_Title");
					this.OnArticle_TitleChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Article_Content", DbType="NVarChar(MAX)")]
		public string Article_Content
		{
			get
			{
				return this._Article_Content;
			}
			set
			{
				if ((this._Article_Content != value))
				{
					this.OnArticle_ContentChanging(value);
					this.SendPropertyChanging();
					this._Article_Content = value;
					this.SendPropertyChanged("Article_Content");
					this.OnArticle_ContentChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Author_ID", DbType="BigInt")]
		public System.Nullable<long> Author_ID
		{
			get
			{
				return this._Author_ID;
			}
			set
			{
				if ((this._Author_ID != value))
				{
					this.OnAuthor_IDChanging(value);
					this.SendPropertyChanging();
					this._Author_ID = value;
					this.SendPropertyChanged("Author_ID");
					this.OnAuthor_IDChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
}
#pragma warning restore 1591
